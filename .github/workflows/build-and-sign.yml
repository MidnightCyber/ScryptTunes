name: Build and Sign
on:
  push:
    branches:
      - main
    
jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.0

    - name: Build with PyInstaller
      uses: sayyid5416/pyinstaller@v1
      with:
        spec: main.py
        requirements: requirements.txt
        options: --onefile, --noconsole

    - name: Code sign a file
      uses: dlemstra/code-sign-action@v1
      with:
        certificate: '${{ secrets.SIGNING_KEY }}'
        password: '${{ secrets.CERT_PASSWORD }}'
        files:
          './dist/main.exe'

    - name: Rename Artifact
      run: mv ./dist/main.exe ./dist/ScryptTunes.exe

    - name: Create Release
      id: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create release and tag with next version number
        VERSION=$(gh release list --json version --limit 1 | jq -r '.[0].version' | awk -F. '{$NF++; print}' OFS='.')
        echo "Next version is $VERSION"
        RELEASE_ID=$(gh release create $VERSION ./dist/ScryptTunes.exe -d -t "Release $VERSION" --json id | jq -r '.id')
        echo "Created release with ID $RELEASE_ID"
        echo "release_id=$RELEASE_ID" >> $GITHUB_ENV
        
    - name: Upload Artifact
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run:
        gh release upload ${{ steps.release.outputs.id }} ./dist/ScryptTunes.py

